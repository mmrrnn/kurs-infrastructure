AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
  FrontendBucketName:
    Type: String
  FrontendDistributionId:
    Type: String
  CloudFormationRole:
    Type: String
  ArtifactsBucketName:
    Type: String
  CurrentTag:
    Type: String
    Default: current
  BuildType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: "aws/codebuild/standard:5.0"
    Description: The build image to use for building the app
  ImagesBucketName:
    Type: String

Resources:
  RunMakeDeployCi:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-DeploySite
      Description: Ensure that the template uses mpapiez transform
      ServiceRole: !Ref CloudFormationRole
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Sub ${BuildImage}
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                python: 3.8
                nodejs: 12.x
              commands:
                - pip install aws-sam-cli
                - npm install -g jq.node
            build:
              commands:
                - make deploy-ci

  InvalidateCloudFront:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: invalidateCloudFront.zip
      Handler: index.default
      Runtime: nodejs14.x
      Policies:
        - Statement:
            - Action:
                - cloudfront:CreateInvalidation
                - codepipeline:PutJobSuccessResult
                - codepipeline:PutJobFailureResult
              Effect: Allow
              Resource: "*"

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - codebuild:*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
                Effect: Allow
              - Action:
                  - s3:PutObject
                Resource:
                  - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                  - s3:*
                  - iam:PassRole
                  - cloudformation:*
                  - states:*
                Resource: "*"
                Effect: Allow
              - Action:
                  - lambda:InvokeFunction
                Effect: Allow
                Resource:
                  - !GetAtt InvalidateCloudFront.Arn

  AWSCloudTrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete

  InfrastructurePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Name: update-mpapiez-infrastructure
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: S3
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                S3Bucket: !Ref ArtifactsBucketName
                S3ObjectKey: !Sub infrastructure/${CurrentTag}/main.zip
                PollForSourceChanges: False
              RunOrder: 1

        - Name: EnforceSecurityTransform
          Actions:
            - Name: EnforeSecurityTransform
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceArtifacts
              OutputArtifacts:
                - Name: BuildArtifacts
              Configuration:
                ProjectName: !Ref RunMakeDeployCi
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  AmazonCloudWatchEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${InfrastructurePipeline}
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${FrontendPipeline}

  AmazonCloudWatchEventRuleInfrastructure:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - CopyObject
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - !Ref ArtifactsBucketName
            key:
              - !Sub infrastructure/${CurrentTag}/main.zip
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${InfrastructurePipeline}
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline

  AWSCloudTrailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AWSCloudTrailBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AWSCloudTrailAclCheck
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt AWSCloudTrailBucket.Arn
          - Sid: AWSCloudTrailWrite
            Effect: Allow
            Principal:
              Service:
                - cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource:
              !Join [
                "",
                [
                  !GetAtt AWSCloudTrailBucket.Arn,
                  "/AWSLogs/",
                  !Ref "AWS::AccountId",
                  "/*",
                ],
              ]
            Condition:
              StringEquals:
                s3:x-amz-acl: bucket-owner-full-control

  AwsCloudTrail:
    DependsOn:
      - AWSCloudTrailBucketPolicy
    Type: AWS::CloudTrail::Trail
    Properties:
      S3BucketName: !Ref AWSCloudTrailBucket
      EventSelectors:
        - DataResources:
            - Type: AWS::S3::Object
              Values:
                - !Sub arn:aws:s3:::${ImagesBucketName}/
                - !Sub arn:aws:s3:::${ArtifactsBucketName}/infrastructure/${CurrentTag}/main.zip
                - !Sub arn:aws:s3:::${ArtifactsBucketName}/admin-panel/${CurrentTag}/admin-panel.zip
          ReadWriteType: WriteOnly
      IncludeGlobalServiceEvents: false
      IsLogging: true
      IsMultiRegionTrail: false

  FrontendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Name: frontend-pipeline
      Stages:
        - Name: Source
          Actions:
            - InputArtifacts: []
              Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: S3
              OutputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                S3Bucket: !Ref ArtifactsBucketName
                S3ObjectKey: !Sub admin-panel/${CurrentTag}/admin-panel.zip
                PollForSourceChanges: False
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: UpdateS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: S3
              InputArtifacts:
                - Name: SourceArtifacts
              Configuration:
                BucketName: !Ref FrontendBucketName
                Extract: true
              RunOrder: 1
            - Name: InvalidateCloudFront
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Version: "1"
                Provider: Lambda
              InputArtifacts: []
              OutputArtifacts: []
              Configuration:
                FunctionName: !Ref InvalidateCloudFront
                UserParameters: !Ref FrontendDistributionId
              RunOrder: 2
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket

  AmazonCloudWatchEventRuleFrontend:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.s3
        detail-type:
          - "AWS API Call via CloudTrail"
        detail:
          eventSource:
            - s3.amazonaws.com
          eventName:
            - CopyObject
            - PutObject
            - CompleteMultipartUpload
          requestParameters:
            bucketName:
              - !Ref ArtifactsBucketName
            key:
              - !Sub admin-panel/${CurrentTag}/admin-panel.zip
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${FrontendPipeline}
          RoleArn: !GetAtt AmazonCloudWatchEventRole.Arn
          Id: codepipeline-AppPipeline
